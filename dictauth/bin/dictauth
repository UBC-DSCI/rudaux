#!/usr/bin/python3

from argparse import ArgumentParser
from dictauth import encrypt_password, add_user, remove_user, list_users, rename_user, clear_users

parser = ArgumentParser(
  description='Manage dictionary-authenticated usernames/passwords in your JupyterHub.'
)

subparsers = parser.add_subparsers(
  title='Subcommands', dest="subparser", help='Commands that dictauth can process.'
)


encrypt_parser = subparsers.add_parser('encrypt_password', help='Create a new salted password hash with SHA512.')
encrypt_parser.set_defaults(func=encrypt_password)


list_user_parser = subparsers.add_parser('list_users', help='List users in the dictionary.')
list_user_parser.set_defaults(func=list_users)
list_user_parser.add_argument(
  '--dir',
  dest='directory',
  action='store',
  default='/srv/jupyterhub/',
  help="The directory containing the jupyterhub configuration file."
)


add_user_parser = subparsers.add_parser('add_user', help='Add a user to the dictionary.')
add_user_parser.set_defaults(func=add_user)
add_user_parser.add_argument(
  '--dir',
  dest='directory',
  action='store',
  default='/srv/jupyterhub/',
  help="The directory containing the jupyterhub configuration file."
)
add_user_parser.add_argument(
  '--user',
  dest='username',
  action='store',
  default='',
  help="The name of the user to add."
)
add_user_parser.add_argument(
  '--salt',
  dest='salt',
  action='store',
  default='',
  help="The value of the salt to append to the password before hashing."
)
add_user_parser.add_argument(
  '--digest',
  dest='digest',
  action='store',
  default='',
  help="The value of the SHA512 digest to check."
)
add_user_parser.add_argument(
  '--copy-creds',
  dest='copy_creds',
  action='store',
  default=None,
  help="The name of the user whose credentials to copy."
)

remove_user_parser = subparsers.add_parser('remove_user', help='Remove a user from the dictionary.')
remove_user_parser.set_defaults(func=remove_user)
remove_user_parser.add_argument(
  '--dir',
  dest='directory',
  action='store',
  default='/srv/jupyterhub/',
  help="The directory containing the jupyterhub configuration file."
)
remove_user_parser.add_argument(
  '--user',
  dest='username',
  action='store',
  default='',
  help="The name of the user to remove."
)

clear_users_parser = subparsers.add_parser('clear_users', help='Remove *all* users from the dictionary.')
clear_users_parser.set_defaults(func=clear_users)
clear_users_parser.add_argument(
  '--dir',
  dest='directory',
  action='store',
  default='/srv/jupyterhub/',
  help="The directory containing the jupyterhub configuration file."
)

rename_user_parser = subparsers.add_parser('rename_user', help='Rename a user in the dictionary.')
rename_user_parser.set_defaults(func=rename_user)
rename_user_parser.add_argument(
  '--dir',
  dest='directory',
  action='store',
  default='/srv/jupyterhub/',
  help="The directory containing the jupyterhub configuration file."
)
rename_user_parser.add_argument(
  '--user',
  dest='username',
  action='store',
  default='',
  help="The name of the user to change."
)

rename_user_parser.add_argument(
  '--new_user',
  dest='new_username',
  action='store',
  default='',
  help="The new name of the user."
)


# Parse the arguments!
args = parser.parse_args()
if args.subparser is not None:
  args.func(args)
else:
  # Otherwise, no subcommand was called, so raise help
  args = parser.parse_known_args(['-h'])
